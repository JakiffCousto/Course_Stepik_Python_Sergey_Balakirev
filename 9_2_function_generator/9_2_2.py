'''
Подвиг 2.
Мы с вами в заданиях несколько раз генерировали последовательность чисел Фибоначчи,
которая строится по правилу: каждое последующее число равно сумме двух предыдущих.
Для разнообразия давайте будем генерировать каждое последующее как сумму трех предыдущих чисел.
При этом первые три числа равны 1 и имеем такую последовательность:
1, 1, 1, 3, 5, 9, 17, 31, 57, ...
Не знаю, есть ли у нее название, поэтому, в рамках уроков, я скромно назову ее последовательностью Балакирева.
Итак, на вход программы поступает натуральное число N (N > 5) и необходимо определить функцию-генератор,
которая бы возвращала N первых чисел последовательности Балакирева (включая первые три единицы).
Реализуйте эту функцию без использования коллекций (списков, кортежей, словарей и т.п.).
Вызовите ее N раз для получения N чисел и выведите полученные числа на экран в одну строчку через пробел.
Sample Input:
7
Sample Output:
1 1 1 3 5 9 17
'''


# put your python code here
def get_Ball(n):
    a = 1
    b = 1
    c = 1
    for i in range(n):
        if i == 0:
            d = a
        elif i == 1:
            d = b
        elif i == 2:
            d = c
        else:
            d = a + b + c
            a = b
            b = c
            c = d

        yield d


N = int(input())
g = get_Ball(N)
for x in g:
    print(x, end=' ')
